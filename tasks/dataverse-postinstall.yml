---

# dataverse/tasks/dataverse-postinstall.yml

- name: set siteurl
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: '{{ glassfish_dir}}/bin/asadmin create-jvm-options "-Ddataverse.siteUrl={{ siteUrl }}"'

- name: stop glassfish manually (systemd gums up the works)
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: '{{ glassfish_dir }}/bin/asadmin stop-domain {{ dataverse.glassfish.domain }}'

- name: start glassfish with systemd
  service: name=glassfish state=started

- name: wait for glassfish to become ready
  wait_for:
    port: 8009
    state: present
    timeout: "{{ dataverse.glassfish.timeout }}"

- name: setup-all.sh kitchen sink configuration.
  shell: "cd /tmp/dvinstall && ./setup-all.sh -p={{ dataverse.adminpass }} > /tmp/setup-all.out 2>&1"

- name: populate reference data
  shell: "psql -U {{ dataverse.db.user }} -h {{ dataverse.db.host }} -d {{ dataverse.db.name }} -f /tmp/dvinstall/reference_data.sql"
  environment:
    PGPASSWORD: "{{ dataverse.db.pass }}"

- name: suppress grizzly ajp warnings
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: "{{ glassfish_dir }}/bin/asadmin set-log-levels org.glassfish.grizzly.http.server.util.RequestUtils=SEVERE"

- name: override some default settings
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: 'curl -X PUT -d "{{item.val}}" "{{ dataverse.api.location }}/admin/settings/{{item.prop}}"'
  with_items:
    - { prop: ":GoogleAnalyticsCode", val: "{{ dataverse.google_analytics_key }}", desc: "key for Google Analytics"}
    - { prop: ":FooterCopyright" , val: "{{ dataverse.copyright }}", desc: "addition to the default copyright statement"}
    - { prop: ":SystemEmail", val: "{{ dataverse.service_email }}", desc: "instance email address"}
    - { prop: ":Protocol", val: "{{ dataverse.doi.protocol }}", desc: "global identifier protocol"}
    - { prop: ":DoiProvider", val: "{{ dataverse.doi.provider }}", desc: "DOI service provider (EZID or DataCite)"}
    - { prop: ":Authority", val: "{{ dataverse.doi.authority }}", desc: "DOI prefix"}
    - { prop: ":Shoulder,", val: "/", desc: "DOI shoulder. leave as slash (/)"}
    - { prop: ":ShibEnabled", val: "{{ shibboleth.enabled }}", desc: "enable/disable shibboleth" }
    - { prop: ":AllowSignUp", val: "{{ dataverse.allow_signups }}", desc: "don't allow self-signup"}
    - { prop: ":BlockedApiEndpoints", val: "admin,test", desc: "APIs that are controlled"}
    - { prop: ":BlockedApiPolicy", val: "localhost-only", desc: "control API access"}

- name: Fin
  debug: msg="Dataverse installation complete! Please check output logs in /tmp for further review."

