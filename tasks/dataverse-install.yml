---
# dataverse/tasks/dataverse-install.yml

# version numbers changed on github. only used this because files were missing from install.zip
#- name: clone {{ dataverse.version }} from git. optimally replace install.zip with this.
#  git: repo=git://github.com/IQSS/dataverse.git dest=/tmp/dataverse_{{ dataverse.version }} version={{ dataverse.version }}
#       clone=yes depth=1 accept_hostkey=true

- name: run dataverse installer
  debug:
    msg: '##### DATAVERSE INSTALLER #####'

- include: dataverse-build.yml
  when: dataverse_branch != "release"
  
- name: fix perms on dataverse-war
  file: path=/tmp/dvinstall/dataverse.war mode=0644

- name: grab current copies of installer source
  get_url:
    url: 'https://raw.githubusercontent.com/IQSS/dataverse/develop/scripts/installer/{{ item }}'
    dest: '/tmp/dvinstall/{{ item }}'
    mode: '0755'
  with_items:
    - install.py
    - installConfig.py
    - installAppServer.py
    - installUtils.py
    - as-setup.sh
  #when: dataverse_branch != "release"

- name: grab api setup scripts as well
  get_url:
    url: 'https://raw.githubusercontent.com/IQSS/dataverse/develop/scripts/api/{{ item }}'
    dest: '/tmp/dvinstall/{{ item }}'
    mode: '0755'
  with_items:
    - setup-all.sh
    - setup-datasetfields.sh
    - setup-builtin-roles.sh
    - setup-identity-providers.sh
  #when: dataverse_branch != "release"

- name: set dataverse adminpass in setup-all
  lineinfile:
    path: /tmp/dvinstall/setup-all.sh
    regexp: '^DV_SU_PASSWORD'
    line: 'DV_SU_PASSWORD="{{ dataverse.adminpass }}"'

- name: bash aliases won't expand in non-interactive shells
  lineinfile:
    path: /tmp/dvinstall/as-setup.sh
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - { regexp: 'rserve_password_alias', line: '  ./asadmin $ASADMIN_OPTS create-jvm-options "\-Ddataverse.rserve.password=${RSERVE_PASS}"' }
    - { regexp: 'doi_password_alias', line: '  ./asadmin $ASADMIN_OPTS create-jvm-options "\-Ddoi.password=${DOI_PASSWORD}"' }
    - { regexp: 'db_password_alias', line: '  ./asadmin $ASADMIN_OPTS set "resources.jdbc-connection-pool.dvnDbPool.property.password=${DB_PASS}"' }

- name: ensure as-setup.sh is executable
  file:
    path: /tmp/dvinstall/as-setup.sh
    mode: 0755

- name: register default_config
  set_fact:
    default_config: '{{ dataverse.default.config }}'

- name: place default.config template
  template:
    src: default.config.j2
    dest: /tmp/dvinstall/default.config
    owner: root
    group: root
    mode: 0644
  when: default_config|length == 0

- name: place default.config
  copy:
    src: default.config
    dest: /tmp/dvinstall/default.config
    owner: '{{ dataverse.glassfish.user }}'
    group: '{{ dataverse.glassfish.group }}'
    mode: 0600
  when: default_config|length > 0

- include: jacoco-instrument.yml
  when: dataverse.jacoco.enabled == true and
        dataverse_repo != "release"

- name: allow installer write access
  file:
    path: /tmp/dvinstall
    owner: '{{ dataverse.glassfish.user }}'

- name: correct hard-coded domain1 paths in installer
  replace:
    path: '{{ item }}'
    regexp: 'domain1'
    replace: '{{ dataverse.glassfish.domain }}'
  with_items:
    - '/tmp/dvinstall/as-setup.sh'
    - '/tmp/dvinstall/installAppServer.py'
    - '/tmp/dvinstall/install.py'

- name: correct hard-coded path in jhove.conf
  lineinfile:
    path: '/tmp/dvinstall/jhove.conf'
    regexp: '/usr/local/glassfish4/glassfish/domains/domain1/'
    line: 'file://{{ glassfish_dir }}/glassfish/domains/{{ dataverse.glassfish.domain }}/config/jhoveConfig.xsd">'

- name: as-setup hard-codes 512m, payara5 production template defaults to 2g
  lineinfile:
    path: '{{ glassfish_dir }}/glassfish/domains/{{ dataverse.glassfish.domain }}/config/domain.xml'
    regexp: '{{ item }}'
    state: absent
  with_items:
    - '-Xmx2g'
    - '-Xms2g'
  when: dataverse.glassfish.zipurl is match(".*payara-5.*")

- name: clear removed jvm-options for the installer
  include: tasks/restart_glassfish.yml

- name: fire off installer
  script: '/usr/bin/python /tmp/dvinstall/install.py -f --config_file=default.config --noninteractive > /tmp/dvinstall/install.out 2>&1'
  become: yes
  become_user: '{{ dataverse.glassfish.user }}'
  args:
    chdir: /tmp/dvinstall

# install.py doesn't currently log this output, nothing sensitive in install.out
#- name: negate need for password aliases
#  file:
#    name: /tmp/as-setup.out
#    mode: 0600
#  ignore_errors: yes

# options we want that the installer doesn't currently set
- name: set logging format
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: "{{ glassfish_dir }}/bin/asadmin set-log-file-format {{ dataverse.glassfish.logformat }}"

# todo: match this to leonid's computed heap from install.py
#- name: allocate heap memory at startup
#  become: yes
#  become_user: '{{ dataverse.glassfish.user }}'
#  shell: '{{ glassfish_dir }}/bin/asadmin create-jvm-options "-Xms{{ dataverse.memheap }}m"'
#  when: dataverse.glassfish.zipurl is match(".*payara-5.*")

- name: adjust MaxMetaSpace to match heap size
  replace:
    path: '{{ glassfish_dir }}/glassfish/domains/{{ dataverse.glassfish.domain }}/config/domain.xml'
    regexp: 'MaxMetaspaceSize=512m'
    replace: 'MaxMetaspaceSize={{ dataverse.memheap }}m'
  when: dataverse.glassfish.zipurl is match(".*payara-5.*")

# this is already present in production domain
#- name: isolated class loading of third party libraries and modules
#  become: yes
#  become_user: '{{ dataverse.glassfish.user }}'
#  shell: '{{ glassfish_dir }}/bin/asadmin create-jvm-options "-Dfish.payara.classloading.delegate=false"'
#  when: dataverse.glassfish.zipurl is match(".*payara-5.*")

# leonid's installer sets both of these
#- name: installer uses G1GC, enable string deduplication
#  become: yes
#  become_user: '{{ dataverse.glassfish.user }}'
#  shell: '{{ glassfish_dir }}/bin/asadmin create-jvm-options "-XX:+UseStringDeduplication"'
#  when: dataverse.glassfish.zipurl is match(".*payara-5.*")

# todo: this is in the performance guide but throws an error
#- name: disable explicit garbage collection
#  become: yes
#  become_user: '{{ dataverse.glassfish.user }}'
#  shell: '{{ glassfish_dir }}/bin/asadmin create-jvm-options "-XX:+DisableExplicitGC"'
#  when: dataverse.glassfish.zipurl is match(".*payara-5.*")
