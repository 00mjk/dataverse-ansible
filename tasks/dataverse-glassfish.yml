---
# dataverse/tasks/dataverse-glassfish.yml

- name: construct glassfish_dir
  set_fact:
    glassfish_dir: '{{ dataverse.glassfish.root }}/{{ dataverse.glassfish.dir }}'

- name: glassfish_dir must exist
  file: path={{ glassfish_dir }} state=directory
        owner=root group=root mode=0755

- name: download and unzip glassfish4
  get_url:
    url: '{{ dataverse.glassfish.zipurl }}'
    dest: /tmp/glassfish.zip

- name: bsdtar can unzip in smarter ways
  yum:
    name: bsdtar
    state: latest

- name: unzip to glassfish root without name/version tld
  shell: 'bsdtar --strip-components=1 -C {{ glassfish_dir }} -xvf /tmp/glassfish.zip'

- name: create glassfish service group
  group: name={{ dataverse.glassfish.group }} state=present

- name: create glassfish service account
  user: name={{ dataverse.glassfish.user }} group={{ dataverse.glassfish.group }}

- name: glassfish service account should own {{ dataverse.glassfish.domain }}
  file: path={{ glassfish_dir }}/glassfish/domains/{{ dataverse.glassfish.domain }} owner={{ dataverse.glassfish.user }}
        group={{ dataverse.glassfish.group }} state=directory recurse=yes

- name: glassfish should own dataverse.filesdir
  file: path={{ dataverse.filesdir }} state=directory
        owner={{ dataverse.glassfish.user }} group={{ dataverse.glassfish.group }}

- name: remove old weld jar
  file: name={{ glassfish_dir }}/glassfish/modules/weld-osgi-bundle.jar state=absent

- name: get patched weld jar
  get_url: url=http://central.maven.org/maven2/org/jboss/weld/weld-osgi-bundle/2.2.10.SP1/weld-osgi-bundle-2.2.10.SP1-glassfish4.jar
        dest={{ glassfish_dir }}/glassfish/modules owner=root group=root mode=0644

- name: remove old grizzly jar
  file: name={{ glassfish_dir }}/glassfish/modules/glassfish-grizzly-extra-all.jar state=absent

- name: get patched grizzly jar
  get_url: url=http://guides.dataverse.org/en/latest/_static/installation/files/issues/2180/grizzly-patch/glassfish-grizzly-extra-all.jar
        dest={{ glassfish_dir }}/glassfish/modules owner=root group=root mode=0644

- name: increase resource limits for glassfish
  blockinfile:
    path: /etc/security/limits.conf
    block: |
      {{ item.user }} {{ item.type }} {{ item.descriptor }} {{ item.value }}
  with_items:
    - { user: "{{ dataverse.glassfish.user }}", type: soft, descriptor: nproc, value: 65000 }
    - { user: "{{ dataverse.glassfish.user }}", type: hard, descriptor: nproc, value: 65000 }
    - { user: "{{ dataverse.glassfish.user }}", type: soft, descriptor: nofile, value: 65000 }
    - { user: "{{ dataverse.glassfish.user }}", type: hard, descriptor: nofile, value: 65000 }

- name: install glassfish systemd conf file for RedHat / CentOS7
  template: src=glassfish.service.j2 dest=/usr/lib/systemd/system/glassfish.service
        owner=root group=root mode=0644
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"

- name: place jacoco jarfile
  copy: 
    src: '{{ dataverse.jacoco.home }}/lib/org.jacoco.agent-0.8.1.201803210924.jar'
    dest: '{{ glassfish_dir }}/glassfish/lib/'
    owner: '{{ dataverse.glassfish.user }}'
    group: '{{ dataverse.glassfish.user }}'
    remote_src: yes
  when: dataverse.jacoco.enabled == true

- name: reload systemd on RedHat/CentOS7
  shell: systemctl daemon-reload
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"

- name: enable glassfish on RedHat/CentOS7 - but don't start it with systemd during Ansible installation
  service: name=glassfish enabled=yes
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"

- name: install glassfish upstart script for Debian/Ubuntu
  template: src=glassfish.conf.j2 dest=/etc/init
        owner=root group=root mode=0644
  when: ansible_os_family == "Debian"

- name: start glassfish with asadmin so subsequent Ansible-initiated restarts succeed on RedHat/CentOS
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: "{{ glassfish_dir }}/bin/asadmin start-domain {{ dataverse.glassfish.domain }}"
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"

- name: start glassfish on Debian/Ubuntu
  service: name=glassfish state=started
  when: ansible_os_family == "Debian"
