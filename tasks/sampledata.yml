---

- name: ensure python3.4+. dataverse-counter wants 3.6, so let's go with that.
  yum:
    name:
    - python36
    - python36-pip
    state: latest

- name: clone sampledata repo
  git:
    repo: '{{ dataverse.sampledata.repo }}'
    dest: '{{ dataverse.sampledata.dir }}'
    version: '{{ dataverse.sampledata.branch }}'

- name: create sampledata venv
  file:
    path: '{{ dataverse.sampledata.venv }}'
    state: directory
    mode: '0755'

- name: create venv
  shell: 'python3 -m venv {{ dataverse.sampledata.dir }}'

- name: source venv
  shell: 'source {{ dataverse.sampledata.dir }}/bin/activate'

- name: install dependencies
  shell: 'pip3 install -r requirements.txt'
  args: 
    chdir: '{{ dataverse.sampledata.dir }}'

- name: copy dvconfig.py.sample to dvconfig.py
  copy:
    src: '{{ dataverse.sampledata.dir }}/dvconfig.py.sample'
    dest: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    remote_src: yes

- name: strip backslash from siteUrl
  set_fact:
    siteUrl_stripped: '{{ siteUrl | regex_replace ("\\", "") }}'

- name: set baseurl in dvconfig.py
  lineinfile:
    path: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    regexp: 'BASE_URL'
    line: "base_url = '{{ siteUrl_stripped }}'"

# ansible forgets this fact why...?
- include: dataverse-apitoken.yml

- name: set API_TOKEN in dvconfig.py
  lineinfile:
    path: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    regexp: 'API_TOKEN'
    line: "api_token = '{{ api_token }}'"

- name: remove unecessary lines from dvconfig.py
  lineinfile:
    path: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    regexp: '{{ item }}'
    state: absent
  with_items:
    - DATAVERSE_SERVICE_HOST
    - DATAVERSE_SERVICE_PORT_HTTP
    - DATAVERSE_SERVICE_PORT_PROTO
    - DATAVERSE_SERVICE_SUBPATH

- name: run sampledata
  shell: 'python3 create_sample_data.py'
  args:
    chdir: '{{ dataverse.sampledata.dir }}'

- name: mark root_dv as published
  set_fact:
    dv_root_published: true
